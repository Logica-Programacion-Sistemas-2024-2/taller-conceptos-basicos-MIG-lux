/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sistemas;

public class App {
    
    // Diseñe un algoritmo para saludar al usuario: Hola usuario. El nombre del usuario es ingresado por teclado
    public static String saludarAlUsuario(String nombre) {
        try {
            
            if (nombre_Persona == null, nombre.isEmpty()) {
                return "Error: El nombre de la persona no es valido";
            }
            return "Hola " + nombre;

        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }
        return "";
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Introduzca su nombre aqui: ");
        String nombre = scanner.nextLine();
        System.out.println(saludarAlUsuario(nombre));
    }

    // Diseñe un algoritmo que lea por teclado una velocidad en Km/seg y la convierta a metros/seg y a metros/hora
    // retorne el valor en formato string (metrosPorSeg + "|" + metrosPorHora)
    public static String convertirVelocidad(double kilometros_Seg) {
        try {
            double metros_Segundo = kilometros_Segundo * 1000;
            double metros_Hora = metros_Segundo * 3600;
            return String.format("%.2f|%.2f", metros_Segundo, metros_Hora);
        } catch (Exception e) {
            return "0|0";
        }
        return "";
    }

    public static void main(String[] args) {
        double kilometros_Segundo = 0.3; 
        String resultado = convertirVelocidad(kilometros_Seg);
        System.out.println(resultado);
    }

    // Solicitar al usuario ingresar una cantidad expresada en cc (centímetros cúbicos) y devolver su cantidad en litros
    public static int convertirCcALitros(double centimetros_Cubicos) {
        try {            
            double litros_Total = centimetros_Cubicos / 1000;
            return litros_Total;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double centimetros_Cubicos = 2349; 
        double litros_Total = convertirCcALitros(cc);
        if (litros_Total != -1) {
            System.out.println(centimetros_Cubicos + " centimetros cubicos: " + litros_Total + " litros");
        } else {
            System.out.println("Error");
        }
    }

    // Solicitar al usuario ingresar una cantidad en dólares y convertirla a pesos según la TRM del día
    public static int convertirDolaresAPesos(double dolares, double tasa_De_Cambio) {
        try {
            double pesos = dolares * tasa_De_Cambio;
            return pesos;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double dolares = 100000; 
        double tasa_De_Cambio = 3730; 
        double pesos = convertirDolaresAPesos(dolares, tasa_De_Cambio);
        if (pesos != -1) {
            System.out.println(dolares + " dolares = " + pesos + " pesos");
        } else {
            System.out.println("Error");
        }
    }

    // Solicitar al usuario ingresar la temperatura en grados centígrados y convertirla en grados Fahrenheit (averiguar la fórmula) F = 32 + ( 9 * C / 5)
    public static int convertirCelsiusAFahrenheit(double grados_Celsius) {
        try {
            double grados_Fahrenheit = 32 + (9 * grados_Celsius / 5);
            return grados_Fahrenheit;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double grados_Celsius = 26; 
        double grados_Fahrenheit = convertirCelsiusAFahrenheit(celsius);
        if (grados_Fahrenheit != -1) {
            System.out.println(grados_Celsius + " grados Celsius = " + grados_Fahrenheit + " grados Fahrenheit");
        } else {
            System.out.println("Error");
        }
    }

    // Solicitar al usuario ingresar Nro de Días nro de horas nro de minutos y nro segundos y convertir todo a segundos.
    public static int convertirATotalSegundos(int dias, int horas, int minutos, int segundos) {
        try {
            if (dias < 0 || horas < 0 || minutos < 0 || segundos < 0) {
            throw new Exception("Todos los parametros tienen que ser positivos");
            }
            int totalSegundos = (dias * 24 * 60 * 60) + (horas * 60 * 60) + (minutos * 60) + segundos;
            return totalSegundos;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Ingrese los dias:");
        int dias = scanner.nextInt();
        
        System.out.println("Ingrese las horas:");
        int horas = scanner.nextInt();
        
        System.out.println("Ingrese los minutos:");
        int minutos = scanner.nextInt();
        
        System.out.println("Ingrese los segundos:");
        int segundos = scanner.nextInt();
        
        int totalSegundos = convertirATotalSegundos(dias, horas, minutos, segundos);
        
        if (totalSegundos != -1) {
            System.out.println("El total de segundos es: " + totalSegundos);
        }
    }

    // Un usuario tiene un sistema de báscula para pesar camiones, dado el peso de un camión debe sacar el peso neto de la carga en kilos y toneladas
    // retorne el valor en formato string (pesoEnKg + "|" + pesoEnToneladas)
    public static String calcularPesoNeto(double peso) {
        try {
            double peso_De_Camion_Vacio = 1000000;
            double peso_Neto_Kilogramos = peso - peso_De_Camion_Vacio;
            double peso_Neto_Toneladas = peso_Neto_Kilogramos / 1000;
            return String.format("%.2f|%.2f", peso_Neto_Kilogramos, peso_Neto_Toneladas);
        } catch (Exception e) {
            return "0|0";
        }
        return "";
    }
    public static void main(String[] args) {
        double peso = 19000; 
        String peso_Neto = calcularPesoNeto(peso);
        System.out.println("El peso neto es: " + pesoNeto);
    }
    

    // Diseñe un algoritmo que calcule el tiempo necesario para alcanzar un destino dado por el usuario quien además ingresará la velocidad promedio en kilómetros/hora y la distancia en kilómetros
    public static int calcularTiempoViaje(double distancia, double velocidadKm, double velocidadHora) {
        try {
            double tiempoViaje = distancia / velocidadKm;
            return tiempoViaje;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double distancia = 70000; 
        double velocidadKm = 238; 
        double tiempoViaje = calcularTiempoViaje(distancia, velocidadKm);
        if (tiempoViaje != -1) {
            System.out.println("El tiempo necesario para alcanzar el destino es: " + tiempoViaje + " horas");
        } else {
            System.out.println("Error al calcular el tiempo de viaje");
        }
    }

    // Un avión necesita cargar combustible para cubrir sus rutas programadas en el día. Cada 0.2 toneladas de combustible puede recorrer 60.8 Km en velocidad de crucero. En el despegue el avión consume 1.2 toneladas de combustible y en el aterrizaje consume 0.4 toneladas. El piloto desea un algoritmo que ingresando 4 rutas y el kilometraje de cada ruta obtenga la cantidad de combustible que debe tanquear en el avión.
    public static int calcularCombustible(double rutaNumero1, double rutaNumero2, double rutaNumero3, double rutaNumero4) {
        try {
            double distanciaTotal = rutaNumero1 + rutaNumero2 + rutaNumero3 + rutaNumero4;
            double combustibleNecesario = distanciaTotal / 60.8;
            combustibleQueSeNecesita += 1.2 + 0.4;
            combustibleQueSeNecesita /= 0.2;
            return combustibleQueSeNecesita;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double rutaNumero1 = 40; 
        double rutaNumero2 = 10000; 
        double rutaNumero3 = 540000; 
        double rutaNumero4 = 500; 
        double combustibleQueSeNecesita = calcularCombustible(rutaNumero1, rutaNumero2, rutaNumero3, rutaNumero4);
        if (combustibleQueSeNecesita!= -1) {
            System.out.println("La cantidad de combustible que debe tanquear el avion es: " + combustibleQueSeNecesita + " toneladas");
        } else {
            System.out.println("Error al calcular el combustible");
        }
    }

    // Diseñar un algoritmo que calcule el peso neto en la luna de un peso terrestre ingresado por teclado. La gravedad de la Luna es de alrededor del 17% más que la de la tierra
    public static int calcularPesoLunar(double peso_Tierra) {
        try {
            double gravedad_De_LaLuna = 0.83; 
            double peso_Luna = peso_Tierra * gravedad_De_LaLuna;
            return peso_Luna;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double peso_Tierra = 14033300; 
        double peso_Luna = calcularPesoLunar(peso_Tierra);
        if (peso_Luna!= -1) {
            System.out.println("El peso neto en la luna es: " + peso_Luna + " kilogramos");
        } else {
            System.out.println("Error al calcular el peso neto en la luna");
        }
    }

    // Diseñar un algoritmo que calcule el saldo que debe haber en una taquilla de un banco. El cajero deberá ingresar la base el total de recaudos y el total de retiros
    public static int calcularSaldoTaquilla(double saldo_Base, double ingresos_Ususario, double retiros_Ususario) {
        try {
            double saldo = saldo_Base + ingresos_Ususario - retiros_Ususario;
            return saldo;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double saldo_Base = 10000000; 
        double ingresos_Ususario = 948000; 
        double retiros_Ususario = 8400000; 
        double saldo = calcularSaldoTaquilla(base, ingresos, retiros);
        if (saldo != -1) {
            System.out.println("El saldo que queda en total es: " + saldo);
        } else {
            System.out.println("Error al calcular el saldo");
        }
    }

    // Diseñe un algoritmo para calcular la propina en un restaurante(10%) el impuesto al consumo (8%) y el valor final que deberá pagar ingresando el valor de la comida.
    // retorne el valor en formato string (propina + "|" + impuesto + "|" + total)
    public static String calcularCuentaRestaurante(double costo_De_Comida) {
        try {
            double propina = costoComida * 0.1;
            double impuesto = costoComida * 0.08;
            double total = costoComida + propina + impuesto;
            return String.format("%.2f|%.2f|%.2f", propina, impuesto, total);
        } catch (Exception e) {
            return -1 + "|" + -1 + "|" + -1;
        }
        return "";
    }
    public static void main(String[] args) {
        double costo_De_Comida = 378000; 
        String[] resultado = calcularCuentaRestaurante(costo_De_Comida).split("\\|");
        if (resultado[0] != "-1" && resultado[1] != "-1" && resultado[2] != "-1") {
            System.out.println("La porpina es: " + resultado[0]);
            System.out.println("El impuesto al consumo es: " + resultado[1]);
            System.out.println("Total: " + resultado[2]);
        } else {
            System.out.println("Error al calcular la cuenta");
        }
    }

    // Diseñar un algoritmo que obtenga los puntos finales de un equipo de fútbol (puntuación según lineamientos de Fifa) a partir de los datos ingresados por teclado: Número de partidos ganados número de partidos perdidos número de partidos empatados.
    public static int calcularPuntosFutbol(int partidos_Totales_Ganados, int partidos_Totales_Perdidos, int partidos_Totales_Empatados) {
        try {
            int puntos_Totales = partidos_Totales_Ganados * 3 + partidos_Totales_Empatados;
            return puntos_Totales;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        int partidos_Totales_Ganados = 40; 
        int partidos_Totales_Perdidos = 0; 
        int partidos_Totales_Empatados = 4; 
        int puntos = calcularPuntosFutbol(partidos_Totales_Ganados, partidos_Totales_Perdidos, partidos_Totales_Empatados);
        if (puntos_En_Total != -1) {
            System.out.println("Los puntos finales son: " + puntos_En_Total);
        } else {
            System.out.println("Error al calcular los puntos finales");
        }
    }

    // Elaborar un algoritmo que dadas todas las 5 notas y los 5 porcentajes para una materia calcule la nota final.
    public static int calcularNotaFinal(double nota1Estudiante, double nota2Estudiante, double nota3Estudiante, double nota4Estudiante, double nota5Estudiante,
                                        double porcentajeNota1, double porcentajeNota2, double porcentajeNota3, double porcentajeNota4, double porcentajeNota5) {
        try {
            if (porcentajeNota1 + porcentajeNota2 + porcentajeNota3 + porcentajeNota4 + porcentajeNota5 = 100) {
            throw new Exception("Los porcentajes deben sumar 100");
            }
            double notaFinal = (nota1Estudiante * porcentajeNota1 / 100) + (nota2Estudiante * porcentajeNota2 / 100) + (nota3Estudiante * porcentajeNota3 / 100) + (nota4Estudiante * porcentajeNota4 / 100) + (nota5Estudiante * porcentajeNota5 / 100);
            return notaFinal;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double nota1Estudiante = 3.3; 
        double nota2Estudiante = 4.2; 
        double nota3Estudiante = 3.9; 
        double nota4Estudiante = 2.2; 
        double nota5Estudiante = 1; 
        double porcentajeNota1 = 50; 
        double porcentajeNota2 = 25; 
        double porcentajeNota3 = 10; 
        double porcentajeNota4 = 5; 
        double porcentajeNota5 = 10; 
        double notaFinal = calcularNotaFinal(nota1, nota2, nota3, nota4, nota5, porcentaje1, porcentaje2, porcentaje3, porcentaje4, porcentaje5);
        if (notaFinal!= -1) {
            System.out.println("La nota final es: " + notaFinal);
        } else {
            System.out.println("Error al calcular la nota final");
        }
    }

    // Elaborar un algoritmo que dados los 5 porcentajes de una materia y las 4 primeras notas calcule cuánto tiene que sacar para ganar si el puntaje mínimo es 3.
    public static int calcularNotaNecesaria(double porcentajeNota1, double porcentajeNota2, double porcentajeNota3, double porcentajeNota4, double porcentajeNota5, double nota1Estudiante, double nota2Estudiante, double nota3Estudiante, double nota4Estudiante) {
        try {
            if (porcentajeNota1 + porcentajeNota2 + porcentajeNota3 + porcentajeNota4 + porcentajeNota5 != 100) {
            throw new Exception("Los porcentajes tienen que sumar 100");
            }
            double nota_Total_Necesita = 3;
            double nota_Total_Actual = (nota1Estudiante * porcentajeNota1 / 100) + (nota2Estudiante * porcentajeNota2 / 100) + (nota3Estudiante * porcentajeNota3 / 100) + (nota4Estudiante * porcentajeNota4 / 100);
            double nota_Necesaria = (nota_Total_Necesita - nota_Total_Actual) * 100 / porcentaje5;
            return nota_Necesaria;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double porcentajeNota1 = 10; /
        double porcentajeNota2 = 20; 
        double porcentajeNota3 = 5; 
        double porcentajeNota4 = 25; 
        double porcentajeNota5 = 40; 
        double nota1Estudiante = 2.9; 
        double nota2Estudiante = 3.1; 
        double nota3Estudiante = 1.4; 
        double nota4Estudiante = 5; 
        double notaNecesaria = calcularNotaNecesaria(porcentajeNota1, porcentajeNota2, porcentajeNota3, porcentajeNota4, porcentajeNota5, nota1Estudiante, nota2Estudiante, nota3Estudiante, nota4Estudiante);
        if (notaNecesaria != -1) {
            System.out.println("La nota que necesitas para ganar la materia es: " + notaNecesaria);
        } else {
            System.out.println("Error");
        }
    }

    // Se requiere un algoritmo para calcular el salario a pagar a un trabajador con los siguientes datos ingresados por teclado: cantidad de horas normales laboradas cantidad de horas extras diurnas laboradas cantidad de horas extras nocturnas laboradas valor de la hora normal. El valor de las horas extras diurnas tienen un recargo adicional del 15% sobre la hora normal. El valor de las horas extras nocturnas tienen un recargo adicional del 35% sobre la hora normal.
    public static int calcularSalario(int horas_Normales, int horas_Extras_Diurnas, int horas_Extras_Nocturnas, double valor_Hora_Normal) {
        try {
            double valor_Hora_Extra_Diurna = valor_Hora_Normal * 1.15;
            double valor_Hora_Extra_Nocturna = valor_Hora_Normal * 1.35;
            double salario_Total = (horas_Normales * valor_Hora_Normal) + (horas_Extras_Diurnas * valor_Hora_Extra_Diurna) + (horas_Extras_Nocturnas * valor_Hora_Extra_Nocturna);
            return salario_Total;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
        
            System.out.print("Ingrese la cantidad de horas laboradas: ");
            int horas_Normales = scanner.nextInt();
        
            System.out.print("Ingrese la cantidad de horas extras diurnas: ");
            int horas_Extras_Diurnas = scanner.nextInt();
        
            System.out.print("Ingrese la cantidad de horas extras nocturnas: ");
            int horas_Extras_Nocturnas = scanner.nextInt();
        
            System.out.print("Ingrese el valor de la hora: ");
            double valor_Hora_Normal = scanner.nextDouble();
        
            double salario_Total = calcularSalario(horas_Normales, horas_Extras_Diurnas, horas_Extras_Nocturnas, valor_Hora_Normal);
            if (salario_Total!= -1) {
            System.out.println("El salario a pagar al trabajador es: " + salario_Total);
            } else {
            System.out.println("Error al calcular el salario");
            }
    }
}

    // Diseñe un algoritmo que calcule el área de un triángulo rectángulo.
    public static int calcularAreaTriangulo(double base_De_El_Triangulo, double altura_De_El_Triangulo) {
        try {
            if (base_De_El_Triangulo <= 0 || altura_De_El_Triangulo <= 0) {
            throw new Exception("Las medidas de el triangulo rectangulo deben ser positivas");
            }
            double area_De_El_Triangulo = (base_De_El_Triangulo * altura_De_El_Triangulo) / 2;
            return area_De_El_Triangulo;

        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public class Main {
        public static void main(String[] args) {
            double base_De_El_Triangulo = 2; 
            double altura_De_El_Triangulo = 1246; 
            
            double area_De_El_Triangulo = calcularAreaTriangulo(base_De_El_Triangulo, altura_De_El_Triangulo);
            if (area_De_El_Triangulo!= -1) {
                System.out.println("El area del triangulo es: " + area_De_El_Triangulo);
            } else {
                System.out.println("Error");
            }
        }
    }

    // Diseñe un algoritmo que calcule el perímetro de un cuadrado.
    public static int calcularPerimetroCuadrado(double lado_De_El_Cuadrado) {
        try {
            if (lado_De_El_Cuadrado <= 0) {
            throw new Exception("Los lados del cuadrado no pueden ser negativos");
            }
            double perimetro_De_El_Cuadrado = 4 * lado_De_El_Cuadrado;
            return perimetro_De_El_Cuadrado;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public class Main {
        public static void main(String[] args) {
            double lado_De_El_Cuadrado = 13; 
            
            double perimetro_De_El_Cuadrado = calcularPerimetroCuadrado(lado);
            if (perimetro!= -1) {
                System.out.println("El de el cuadrado es: " + perimetro_De_El_Cuadrado);
            } else {
                System.out.println("Error al calcular");
            }
        }
    }

    // Diseñe un algoritmo que calcule el volumen de un cilindro.
    public static int calcularVolumenCilindro(double radio_De_Cilindro, double altura_De_Cilindro) {
        try {
            if (radio_De_Cilindro <= 0 || altura_De_Cilindro <= 0) {
            throw new Exception("La altura y el radio de el cilindro no pueden ser negativos");
            }
            double volumen_De_El_Cilindro = Math.PI * Math.pow(radio_De_Cilindro, 2) * altura_De_Cilindro;
            return volumen_De_El_Cilindro;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public class Main {
        public static void main(String[] args) {
            double radio_De_Cilindro = 70; 
            double altura_De_Cilindro = 46; 
            
            double volumen_De_El_Cilindro = calcularVolumenCilindro(radio_De_Cilindro, altura_De_Cilindro);
            if (volumen!= -1) {
                System.out.println("El volumen total de el cilindro es: " + volumen_De_El_Cilindro);
            } else {
                System.out.println("Error al calcular");
            }
        }
    }

    // Diseñe un algoritmo que calcule el área del círculo. El radio se pide por teclado.
    public static int calcularAreaCirculo(double radio_De_Circulo) {
        try {
            if (radio_De_Circulo <= 0) {
            throw new Exception("El radio del circulo no puede ser negativo");
            }
            double area_De_Circulo = Math.PI * Math.pow(radio_De_Circulo, 2);
            return area_De_Circulo;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Introduzca el radio de el circulo: ");
        double radio_De_Circulo = scanner.nextDouble();
        
        double area_De_Circulo = calcularAreaCirculo(radio_De_Circulo);
        if (area_De_Circulo!= -1) {
            System.out.println("El area de el circulo es: " + area_De_Circulo);
        } else {
            System.out.println("Error al calcular el area");
        }
    }

    public static void main(String[] args) {
        
    }
}


